@model ProductListingModel

<div class="flex-grow-1 d-flex flex-column">
    <div class="row">
        <div class="col-12 mb-1">
            <h1 class="text-start ps-md-5 fw-bold text-primary">Browse Products</h1>
        </div>
    </div>

        <div class="row mb-4">
            <form id="searchFilterForm" method="get" asp-controller="Home" asp-action="Index">
                <div class="d-flex flex-column flex-md-row justify-content-end align-items-center align-items-md-center gap-2 px-md-4">
                    <div class="position-relative" style="max-width: 280px;">
                        <input type="text"
                               class="form-control rounded-pill pe-5 bg-light border border-info"
                               id="SearchTerm"
                               asp-for="SearchTerm"
                               placeholder="Search Product">

                        <i class="bi bi-search position-absolute top-50 end-0 translate-middle-y me-3 text-muted pointer-events-none"></i>
                    </div>

                    <select asp-for="SortOption"
                            asp-items="Model.SortOptions"
                            class="form-select rounded-pill px-3 bg-light border border-info custom-sort-grid"
                            onchange="this.form.submit()"
                            style="max-width: 110px;">
                    </select>

                    <button type="button"
                            data-bs-toggle="modal"
                            data-bs-target="#filterModal"
                            class="btn btn-outline-success rounded-pill px-3"
                            style="transition: 0.3s ease;"
                            onmouseover="this.classList.add('btn-primary'); this.classList.remove('btn-outline-primary');"
                            onmouseout="this.classList.remove('btn-primary'); this.classList.add('btn-outline-primary');">
                        Filter
                        <i class="bi bi-funnel-fill"></i>
                    </button>

                    <select asp-for="PerPage"
                            asp-items="Model.PerPageOptions"
                            class="form-select rounded-pill px-3 bg-light border border-info custom-select-grid"
                            style="max-width: 70px;"
                            onchange="this.form.submit()">
                    </select>
                </div>
            </form>

            <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content rounded-4">
                        <div class="modal-header">
                            <h2 class="modal-title fs-5" id="exampleModalLabel">Filter Results</h2>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form method="get" asp-action="Index">
                                <fieldset>
                                    <label for="customRange3" class="form-label">Price range</label>
                                    <input type="range" class="form-range" min="0" max="5" step="0.5" id="customRange3">
                                </fieldset>
                                <fieldset class="my-4">
                                    <label class="mb-2">Select Categories</label>
                                    @foreach (var category in Model.Categories)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input"
                                                   type="checkbox"
                                                   name="SelectedCategories"
                                                   value="@category.Name"
                                                   id="@category.Name"
                                                   @(Model.SelectedCategories != null && Model.SelectedCategories.Contains(category.Name) ? "checked" : "") />
                                            <label class="form-check-label" for="@category.Name">
                                                @category.Name
                                            </label>
                                        </div>
                                    }
                                </fieldset>
                                <div>
                                    <button type="submit" class="btn btn-warning rounded-pill px-4">Filter</button>
                                    <a href="@Url.Action("Index", new {
                                        SearchTerm = Model.SearchTerm,
                                        SortOption = Model.SortOption,
                                        PerPage = Model.PerPage
                                        })"
                                       class="btn btn-danger rounded-pill px-4">
                                        Reset Filters
                                    </a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    

    <!-- Scrollable products grid -->
    <div class="products-scroll-container flex-grow-1">
        <div class="container px-4">
            <div class="row justify-content-center pb-4">
                @foreach (var product in Model.Products)
                {
                    <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12 mb-4" style="max-width: 320px;">
                        <div class="product-card h-100 shadow-sm border-0 rounded-3 overflow-hidden position-relative">
                            <a class="text-decoration-none" asp-action="Details" asp-route-id="@product.ProductId">
                                <div class="product-image-container position-relative">
                                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                                    {
                                        <img src="@product.ImageUrl"
                                             class="product-image w-100"
                                             alt="@product.Name"
                                             onerror="this.style.display='none'; this.nextElementSibling.classList.remove('d-none');" />
                                        <div class="image-placeholder d-none">
                                            <div class="text-center text-muted">
                                                <i class="bi bi-image fs-1 mb-2"></i>
                                                <div class="fw-bold">No Image</div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="image-placeholder">
                                            <div class="text-center text-muted">
                                                <i class="bi bi-image fs-1 mb-2"></i>
                                                <div class="fw-bold">No Image</div>
                                            </div>
                                        </div>
                                    }

                                    <div class="price-badge position-absolute top-0 end-0 m-2">
                                        <span class="badge bg-primary fs-6 px-3 py-2 rounded-pill">
                                            @product.Category.Name
                                        </span>
                                    </div>
                                </div>

                                <div class="card-body p-3 d-flex flex-column">
                                    <h5 class="product-title text-dark mb-2 fw-bold text-center">
                                        @product.Name
                                    </h5>
                                    <div class="text-center mb-1">
                                        <small class="text-muted">by</small>
                                        <span class="brand-name text-primary fw-semibold">@product.Brand</span>
                                    </div>
                                    <div class="rating-container text-center mb-1">
                                        <div class="stars mb-1">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= Math.Floor(product.Rating))
                                                {
                                                    <i class="bi bi-star-fill text-warning"></i>
                                                }
                                                else if (i <= product.Rating)
                                                {
                                                    <i class="bi bi-star-half text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-star text-muted"></i>
                                                }
                                            }
                                        </div>
                                        <small class="text-muted">
                                            @product.Rating.ToString("F1") (@product.RatingNos reviews)
                                        </small>
                                    </div>

                                    <h4 class="text-center mb-4">$@product.Price.ToString("F2")</h4>

                                    <div class="text-center mt-auto">
                                        <div class="btn btn-outline-primary btn-sm px-4 py-2 rounded-pill hover-effect">
                                            <i class="bi bi-eye me-1"></i>
                                            View Details
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            </div>
            @{
                var totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PerPage);
            }

            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">

                    <li class="page-item @(Model.PageNo <= 1 ? "disabled" : "")">
                        <a class="page-link"
                           href="@Url.Action("Index", new { pageNo = Model.PageNo - 1, Model.PerPage, Model.SearchTerm, SelectedCategories = Model.SelectedCategories })">
                            Previous
                        </a>
                    </li>

                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(Model.PageNo == i ? "active" : "")">
                            <a class="page-link"
                               href="@Url.Action("Index", new { pageNo = i, Model.PerPage, Model.SearchTerm, SelectedCategories = Model.SelectedCategories })">
                                @i
                            </a>
                        </li>
                    }

                    <li class="page-item @(Model.PageNo >= totalPages ? "disabled" : "")">
                        <a class="page-link"
                           href="@Url.Action("Index", new { pageNo = Model.PageNo + 1, Model.PerPage, Model.SearchTerm, SelectedCategories = Model.SelectedCategories })">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<style>
    .bi-search {
        z-index: 10;
    }

    .custom-select-grid {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-grid' viewBox='0 0 16 16'%3E%3Cpath d='M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5zM2.5 2a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5zm6.5.5A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5zM1 10.5A1.5 1.5 0 0 1 2.5 9h3A1.5 1.5 0 0 1 7 10.5v3A1.5 1.5 0 0 1 5.5 15h-3A1.5 1.5 0 0 1 1 13.5zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5zm6.5.5A1.5 1.5 0 0 1 10.5 9h3a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-3A1.5 1.5 0 0 1 9 13.5zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5z'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 1rem;
        padding-right: 2.5rem;
    }

    .custom-sort-grid {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-filter' viewBox='0 0 16 16'%3E%3Cpath d='M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 1rem;
        padding-right: 2.5rem;
    }

    .form-check-input {
        border-radius: 0.25rem;
    }

    .form-check-input:checked {
        background-color: #0d6efd;
        border-color: #198754;
    }

    .products-scroll-container {
        overflow-y: auto;
        overflow-x: hidden;
    }

        /* Custom scrollbar styling */
        .products-scroll-container::-webkit-scrollbar {
            width: 8px;
        }

        .products-scroll-container::-webkit-scrollbar-track {
            background: rgba(241, 241, 241, 0.5);
            border-radius: 10px;
        }

        .products-scroll-container::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 10px;
            transition: background 0.3s ease;
        }

    .products-scroll-container {
        scrollbar-width: thin;
        scrollbar-color: #c1c1c1 rgba(241, 241, 241, 0.5);
    }

    .product-card {
        transition: all 0.3s ease;
        background: #fff;
        border: 1px solid #e9ecef;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15) !important;
            border-color: #007bff;
        }

    .product-image-container {
        height: 280px;
        overflow: hidden;
        background: #f8f9fa;
        position: relative;
        border-radius: 12px 12px 0 0;
    }

    .product-image {
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
        opacity: 0;
        animation: fadeIn 0.5s ease-in forwards;
    }

    .product-card:hover .product-image {
        transform: scale(1.08);
    }

    .image-placeholder {
        height: 100%;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px dashed #dee2e6;
        border-radius: 12px 12px 0 0;
    }

    .price-badge .badge {
        font-weight: 600;
        letter-spacing: 0.5px;
        box-shadow: 0 4px 12px rgba(0,123,255,0.25);
        font-size: 0.9rem;
    }

    .category-badge .badge {
        font-size: 0.7rem;
        font-weight: 500;
        backdrop-filter: blur(10px);
        background: rgba(108, 117, 125, 0.9) !important;
    }

    .product-title {
        font-size: 1rem;
        line-height: 1.3;
        min-height: 2.6rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        margin-bottom: 0.75rem;
    }

    .brand-name {
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .stars i {
        font-size: 0.85rem;
        margin-right: 1px;
    }

    .rating-container {
        border-bottom: 1px solid #f0f0f0;
        padding-bottom: 0.5rem;
        margin-bottom: 0.75rem;
    }

    .description-text {
        line-height: 1.4;
        min-height: 2.8rem;
        font-size: 0.85rem;
    }

    .hover-effect {
        transition: all 0.2s ease;
        border-width: 2px;
        font-size: 0.85rem;
        padding: 0.4rem 1rem;
    }

    .product-card:hover .hover-effect {
        background: #007bff;
        color: white;
        border-color: #007bff;
        transform: scale(1.05);
    }

    .product-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, rgba(0,123,255,0.1), rgba(0,123,255,0.05));
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 1;
        pointer-events: none;
    }

    .product-card:hover::before {
        opacity: 1;
    }

    .card-body {
        position: relative;
        z-index: 2;
    }

    @@keyframes fadeIn {
        to {
            opacity: 1;
        }
    }

    @@media (max-width: 768px) {
        .product-image-container {
            height: 200px;
        }

        .product-title {
            font-size: 1rem;
        }

        .price-badge .badge {
            font-size: 0.8rem;
            padding: 0.4rem 0.8rem;
        }
    }
</style>